<project name="openrock" default="dist" basedir=".">
    <description>
    	openrock curling
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="main-class" value="net.sf.openrock.Main"/>
  <property name="debug" value="on"/>


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" debug="${debug}" destdir="${build}" includeantruntime="false"
    	includes="**/*.java">
		<compilerarg value="-Xlint:unchecked"/>
	</javac>

	<!-- copy graphic to build dir -->
	<copy todir="${build}" file="${basedir}/gfx/openrock.png"/>

  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <manifest file="manifest.mf">
       <attribute name="Main-Class" 
          value="net.sf.openrock.Main" />
    </manifest>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/openstone-${DSTAMP}.jar" basedir="${build}"
     manifest="manifest.mf">
    <!-- includes="**/*.class"> -->
    <include name="openrock.png"/>
    <include name="**/*.class"/>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>

